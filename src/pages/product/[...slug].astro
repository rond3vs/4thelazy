---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import ProductPostLayout from '../../layouts/ProductPostLayout.astro';

// Generate static paths for all product posts
export async function getStaticPaths() {
  const productEntries = await getCollection('products');
  return productEntries.map((entry: CollectionEntry<'products'>) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Define interface for props
interface Props {
  entry: CollectionEntry<'products'>;
}

// The entry prop is passed from getStaticPaths
const { entry } = Astro.props as Props;
const { Content } = await entry.render();

// Transform entry.data to match ProductPostLayout props
const productLayoutProps = {
  title: entry.data.title,
  publishDate: entry.data.pubDate, // Map pubDate to publishDate
  updatedDate: entry.data.updatedDate,
  image: entry.data.image,
  categories: entry.data.categories,
  description: entry.data.description,
  // You need to provide a productType
  productType: entry.data.productType || "Product", // Fallback if not present
  // Optional props
  isRecommended: entry.data.isSponsored, // Using isSponsored as isRecommended if that makes sense
  affiliateUrl: entry.data.affiliateUrl, // This appears missing in your error
};
---

<ProductPostLayout {...productLayoutProps}>
  <Content />
</ProductPostLayout>